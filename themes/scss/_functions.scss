@use "sass:math";

$memo:();

@function memo-update($function, $params, $value) {
  $result:();
  @if map-has-key($memo, $function) {
    $sub-map-new: map-merge(map-get($memo,$function),($params: $value));
    $result: map-merge($memo, ($function: ($sub-map-new) ));
  }
  @else {
    $result: map-merge($memo, ($function: ($params: $value)));
  }

  @return $result;
}

@function memo-get($function, $params) {
  $result: map-get(map-get($memo,$function),$params);
  @return $result;
}

@function call-function($function, $params...) {
  @if map-has-key($memo, $function) {
    $result: memo-get($function, $params);
    @if $result != null {
      @return $result;
    }
  }
  $result: call($function, $params...);
  $memo: memo-update($function, $params, $result) !global;
  @return $result;
}

@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}

/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
@function luminance($color) {
  $colors: (
          R: red($color),
          G: green($color),
          B: blue($color)
  );

  @each $name, $value in $colors {
    $adjusted: 0;
    $value: math.div($value, 255);

    @if $value < 0.03928 {
      $value: math.div($value, 12.92);
    } @else {
      $value: math.div($value + 0.055, 1.055);
      $value: pow($value,  3);
    }

    $colors: map-merge($colors, ($name: $value));
  }
  @return (map-get($colors, R) * .2126) + (map-get($colors, G) * .7152) + (map-get($colors, B) + .0722);
}

/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
@function contrast($back, $front) {
  $backLum: luminance($back) + .05;
  $foreLum: luminance($front) + .05;

  @return math.div(max($backLum, $foreLum), min($backLum, $foreLum));
}

/**
 * Determine whether to use dark or light text on top of given color.
 * Returns black for dark text and white for light text.
 */
@function choose-contrast-color($color) {
  $lightContrast: contrast($color, white);
  $darkContrast: contrast($color, black);

  @if ($lightContrast > $darkContrast) {
    @return white;
  }
  @else {
    @return black;
  }
}

